name: Web App Deploy

# Triggers for workflow execution
on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      branch:
        required: true
        type: string
      aws_region:
        required: true
        type: string
      node_version:
        required: true
        type: string
      


env:
    id-token: write   # This is required for requesting the JWT
    contents: read    # This is required for actions/checkout
    
jobs:
  deploy:
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - name: Set Node.js  ${{ inputs.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}

      - name: Run npm install
        run: npm ci

      - name: Build npm
        run: CI=false npm run build:${{ inputs.env }}

      - name: Configure AWS Credentials
        run: |
          if [ "${{ inputs.env }}" = "prod" ]; then
            role_to_assume="${{ secrets.AWS_PROD_ROLE_TO_ASSUME }}"
          else
            role_to_assume="${{ secrets.AWS_DEV_ROLE_TO_ASSUME }}"
          fi
          
          aws-actions/configure-aws-credentials@v1 \
            --role-to-assume "$role_to_assume" \
            --role-session-name GitHub_to_AWS_via_FederatedOIDC \
            --aws-region "${{ inputs.aws_region }}"

      - name: Deploy WEB
        run: |
          if [ "${{ inputs.env }}" = "prod" ]; then
            aws s3 sync ./build/html s3://${{ secrets.PROD_WEB_BUCKET_NAME }} --delete
            aws cloudfront create-invalidation --distribution-id ${{ secrets.PROD_WEB_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
          else
            aws s3 sync ./build/html s3://${{ secrets.DEV_WEB_BUCKET_NAME }} --delete
            aws cloudfront create-invalidation --distribution-id ${{ secrets.DEV_WEB_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
          fi
      
      - name: Deploy Dashboard 
        run: |
          if [ "${{ inputs.env }}" = "prod" ]; then
            aws s3 sync ./build/react s3://${{ secrets.PROD_CONSOLE_BUCKET_NAME }} --delete
            aws cloudfront create-invalidation --distribution-id ${{ secrets.PROD_CONSOLE_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
          else
            aws s3 sync ./build/react s3://${{ secrets.DEV_CONSOLE_BUCKET_NAME }} --delete
            aws cloudfront create-invalidation --distribution-id ${{ secrets.DEV_CONSOLE_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
          fi