<section class="calculator">
  <div class="container">
    <div class="calculator__title_wrapper">
      <h2 class="title_wrapper__title">Calculate the benefits</h2>
      <p class="title_wrapper__description">Calculate how beneficial it will be to use our service for your tasks</p>
    </div>
    <div class="calculator__info_block">
      <div class="info_block__config">
        <div class="config__selects">
          <div class="selects__item">
            <label for="select-env">Current Hosting Environment</label>
            <div class="selects__item__container">
              <select id="select-env" onchange="selectEnvChanged()">
                <option value="AWS">AWS</option>
                <option value="GCP">GCP</option>
                <option value="Azure">Azure</option>
              </select>
            </div>
          </div>
          <div class="selects__item">
            <label for="select-type">VM type and size</label>
            <div class="selects__item__container">
              <select id="select-type" onchange="recalculateValues()"></select>
            </div>
          </div>
        </div>
        <div class="config__range">
            <label for="select-instances">Number of instances</label>
            <span id="instancesValue"></span>
            <input type="range" id="select-instances" min="2" max="100" value="10" step="1" onchange="rangeInputChanged()" />
            <div class="min_max_values">
              <span>2</span> 
              <span>100</span>
            </div>
        </div>
        <div class="config__range">
          <label for="hours">Monthly utilization per instance</label>
          <span id="hoursValue"></span>
          <input type="range" id="hours" min="10" max="732" value="400" step="10" onchange="rangeInputChanged()" />
          <div class="min_max_values">
            <span>10 hrs</span>
            <span>730 hrs</span>
          </div>
        </div>
      </div>
      <div class="calculator__results_block">
        <div class="calculator__results_block__compare">
          <h3>Crowd Cloud:</h3>
          <p>You can enjoy the same compute power with <span id="computers-number">--</span> employee computers / laptops for:</p>
          <div class="counted_amount">
            <h2 id="cuestPrice">--</h2>
            <span>/mo</span>
          </div>
        </div>
        <div class="calculator__results_block__compare">
          <h3>Other cloud platforms:</h3>
          <p>Estimated usage cost with your current cloud provider*:</p>
          <div class="counted_amount">
            <h2 id="otherPrice">--</h2>
            <span>/mo</span>
          </div>
          <span>* On-demand plans</span>
        </div>
      </div>
    </div>
  </div>
  <script>
    const updateInstancesRangeValue = () => {
      const instancesInput = document.getElementById('select-instances');
      const instancesValue = document.getElementById('instancesValue');
      const val = (instancesInput.value - instancesInput.min) / (instancesInput.max - instancesInput.min);
      const off = (instancesInput.offsetWidth - 16) / (parseInt(instancesInput.max) - parseInt(instancesInput.min));
      console.log(val, off)
      instancesInput.style.backgroundImage =
        '-webkit-gradient(linear, left top, right top, ' +
        'color-stop(' + val + ', #00A1EF), ' +
        'color-stop(' + val + ', #DCF9FF)' +
        ')';
      console.log((instancesInput.valueAsNumber - parseInt(instancesInput.min)) * off, instancesValue.offsetWidth / 2)
      const px = ((instancesInput.valueAsNumber - parseInt(instancesInput.min)) * off) - (instancesValue.offsetWidth / 2);
      instancesValue.innerHTML = `${instancesInput.value}`;
      instancesValue.style.left = `${px}px`;
    }

    
    const updateHoursRangeValue = () => {
      const hoursInput = document.getElementById('hours');
      const hoursValue = document.getElementById('hoursValue');
      const val = (hoursInput.value - hoursInput.min) / (hoursInput.max - hoursInput.min);
      const off = (hoursInput.offsetWidth - 16) / (parseInt(hoursInput.max) - parseInt(hoursInput.min));
      console.log(val, off)
      hoursInput.style.backgroundImage =
        '-webkit-gradient(linear, left top, right top, ' +
        'color-stop(' + val + ', #00A1EF), ' +
        'color-stop(' + val + ', #DCF9FF)' +
        ')';
      console.log((hoursInput.valueAsNumber - parseInt(hoursInput.min)) * off, hoursValue.offsetWidth / 2)
      const px = ((hoursInput.valueAsNumber - parseInt(hoursInput.min)) * off) - (hoursValue.offsetWidth / 2);
      hoursValue.innerHTML = `${hoursInput.value} hrs/mo`;
      hoursValue.style.left = `${px}px`;


    };

    const updateTypeSelect = () => {
      const selectEnv = document.getElementById('select-env');
      const selectType = document.getElementById('select-type');

      selectType.innerHTML = '';

      const selectedCloudProvider = selectEnv.value;

      const options = {
        'AWS': [
          // { value: 'm4.large', text: 'm4.large (2 vCPUs, 8 GB)' },
          { value: 'c7i.xlarge', text: 'c7i.xlarge (4 vCPUs, 8 GB)' },
          { value: 'm6g.xlarge', text: 'm6g.xlarge (4 vCPUs, 16 GB)' },
          { value: 'c5.2xlarge', text: 'c5.2xlarge (8 vCPUs, 16 GB)' }
        ],
        'GCP': [
          // { value: 'e2-standard-2', text: 'e2-standard-2 (2 vCPUs, 8 GB)' },
          { value: 'e2-standard-4', text: 'e2-standard-4 (4 vCPUs, 16 GB)' },
          { value: 'e2-standard-8', text: 'e2-standard-8 (8 vCPUs, 32 GB)' }
        ],
        'Azure': [
          // { value: 'D2as v5', text: 'D2as v5 (2 vCPUs, 8 GB)' },
          { value: 'B4ls v2', text: 'B4ls v2 (4 vCPUs, 8 GB)' },
          { value: 'B4s v2', text: 'B4s v2 (4 vCPUs, 16 GB)' },
          { value: 'A8 v2', text: 'A8 v2 (8 vCPUs, 16 GB)' }
        ]
      };

      // Populate the second select with the corresponding options
      options[selectedCloudProvider].forEach(optionValue => {
        const option = document.createElement('option');
        option.value = optionValue.value;
        option.text = optionValue.text;
        selectType.appendChild(option);
      });
    }

    const calculatePriceValue = (table) => {
      const selectType = document.getElementById('select-type');
      const numberOfInstances = document.getElementById('select-instances');
      const hoursInput = document.getElementById('hours');
      const otherPriceElement = document.getElementById('otherPrice');
      const cuestPriceElement = document.getElementById('cuestPrice');
      const computersNumberElement = document.getElementById('computers-number');
      const selectedInstance = selectType.value;
      const hoursValue = hoursInput.valueAsNumber;

      const priceComparison = table[selectedInstance]

      const otherPrice = priceComparison.cloudHour * hoursValue * parseInt(numberOfInstances.value, 10)
      otherPriceElement.innerHTML = `$${otherPrice.toFixed(1)}`

      const computersNumber = parseInt(numberOfInstances.value, 10) 
      var cuestPrice = 0
      if(computersNumber > 2){
        cuestPrice = 20  * ( computersNumber-2 )
      }
      cuestPriceElement.innerHTML = `$${cuestPrice.toFixed(1)}`
      computersNumberElement.innerHTML = `${computersNumber}`
    }

    const recalculateValues = () => {
      const tablePricing = {
        'm4.large': {
          cloudHour: 0.1,
          cpus: 2,
          
        },
        'c7i.xlarge': {
          cloudHour: 0.1785,
          cpus: 4,
          
        },
        'm6g.xlarge': {
          cloudHour: 0.154,
          cpus: 4,
          
        },
        'c5.2xlarge': {
          cloudHour: 0.340,
          cpus: 8,
          
        },
        'e2-standard-2': {
          cloudHour: 0.067,
          cpus: 2,
          
        },
        'e2-standard-4': {
          cloudHour: 0.134,
          cpus: 4,
          
        },
        'e2-standard-8': {
          cloudHour: 0.268,
          cpus: 8,
          
        },
        'D2as v5': {
          cloudHour: 0.086,
          cpus: 2,
          
        },
        'B4ls v2': {
          cloudHour: 0.147,
          cpus: 4,
          
        },
        'B4s v2': {
          cloudHour: 0.166,
          cpus: 4,
          
        },
        'A8 v2': {
          cloudHour: 0.4,
          cpus: 8,
          
        }
      }
      calculatePriceValue(tablePricing)
    }

    const selectEnvChanged = () => {
      updateTypeSelect()
      recalculateValues()
    }

    const rangeInputChanged = () => {
      updateInstancesRangeValue()
      updateHoursRangeValue()
      recalculateValues()
    }

    window.addEventListener('load', () => [selectEnvChanged(), rangeInputChanged()]);
    const hoursInput = document.getElementById('hours');
    hoursInput.addEventListener('input', rangeInputChanged);
    const instances = document.getElementById('select-instances');
    instances.addEventListener('input', rangeInputChanged);
  </script>
</section>
